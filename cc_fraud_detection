import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import pandas as pd
data = pd.read_csv('creditcard.csv')
print(data.head())
print(data.tail())
print(data.info())
print(data.describe())
print(data.isnull().sum())
data['Class'].value_counts()
legit = data[data.Class == 0]
fraud = data[data.Class == 1]
print(legit.shape)
print(fraud.shape)
legit.Amount.describe()
fraud.Amount.describe()
data.groupby('Class').mean()
legit_sample = legit.sample(n=492)
new_dataset = pd.concat([legit_sample, fraud], axis=0)
new_dataset.head()
new_dataset.tail()
new_dataset['Class'].value_counts()
new_dataset.groupby('Class').mean()
X=new_dataset.drop(columns='Class',axis=1)
Y=new_dataset['Class']
print(X)
print(Y)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)
print(X.shape, X_train.shape, X_test.shape)
model=LogisticRegression()
model.fit(X_train,Y_train)
Y_train_predict=model.predict(X_train)
training_data_accuracy=accuracy_score(Y_train_predict,Y_train)
print('Accuracy on Training data : ', training_data_accuracy)
Y_test_predict=model.predict(X_test)
test_data_accuracy=accuracy_score(Y_test_predict,Y_test)
print('Accuracy on Test data : ', test_data_accuracy)
